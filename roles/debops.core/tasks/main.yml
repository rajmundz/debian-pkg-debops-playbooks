---

- name: Create root directories
  file:
    path: '{{ hostvars[inventory_hostname]["ansible_local"]["root"][item.fact]
              if (hostvars[inventory_hostname]["ansible_local"]|d() and
                  hostvars[inventory_hostname]["ansible_local"]["root"]|d() and
                  hostvars[inventory_hostname]["ansible_local"]["root"][item.fact]|d())
              else item.path }}'
    state: 'directory'
  with_items: '{{ core_root_directories }}'

- name: Check IP address of current Ansible Controller
  set_fact:
    ansible_controller: '{{ core_active_controller }}'
    core_fact_ansible_controller: '{{ core_active_controller }}'
  when: core_fact_ansible_controller is undefined and ansible_connection != "local"
  tags: [ 'role::core', 'role::ferm', 'role::ferm:config', 'role::tcpwrappers' ]
  become: False

- name: Read the host UUID
  shell: dmidecode --string system-uuid | tail -n 1 || true
  register: core_register_uuid
  changed_when: False

- name: Save local facts
  template:
    src: 'etc/ansible/facts.d/{{ item }}.fact.j2'
    dest: '/etc/ansible/facts.d/{{ item }}.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: core_register_fact_files
  with_items: [ 'core', 'root', 'tags', 'uuid' ]

- name: Install local fact scripts
  copy:
    src: 'etc/ansible/facts.d/'
    dest: '/etc/ansible/facts.d/'
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: core_register_fact_scripts

- name: Gather local facts if they changed
  action: setup
  when: core_register_fact_files.changed | bool or
        core_register_fact_scripts.changed | bool

- name: Update APT cache and install required packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
    update_cache: True
    cache_valid_time: '{{ core_cache_valid_time }}'
  with_flattened:
    - '{{ core_base_packages }}'
    - '{{ core_packages }}'

