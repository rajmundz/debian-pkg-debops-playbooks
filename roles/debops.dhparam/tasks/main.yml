---

- name: Check Ansible Controller library version
  shell: |
    {% if dhparam__source_library == 'gnutls' %}
    certtool --version | head -n 1 | awk '{print $NF}'
    {% elif dhparam__source_library == 'openssl' %}
    openssl version | awk '{print $2}'
    {% endif %}
  changed_when: False
  register: dhparam__register_version
  delegate_to: 'localhost'
  become: False
  run_once: True
  always_run: True

- name: Assert that required software is installed
  assert:
    that:
      - 'dhparam__register_version is defined and dhparam__register_version.stdout'
  delegate_to: 'localhost'
  become: False
  run_once: True

- name: Create required directories on Ansible Controller
  file:
    path: '{{ dhparam__source_path }}'
    state: 'directory'
  delegate_to: 'localhost'
  become: False
  run_once: True

- name: Generate Diffie-Hellman params on Ansible Controller
  command: |
    {% if dhparam__source_library == 'gnutls' %}
    certtool --generate-dh-params --outfile {{ dhparam__source_path + "/" + dhparam__prefix + item + dhparam__suffix }} --bits {{ item }}
    {% elif dhparam__source_library == 'openssl' %}
    openssl dhparam -out {{ dhparam__source_path + "/" + dhparam__prefix + item + dhparam__suffix }} {{ item }}
    {% endif %}
  args:
    creates: '{{ dhparam__source_path + "/" + dhparam__prefix + item + dhparam__suffix }}'
  with_items: '{{ dhparam__bits }}'
  delegate_to: 'localhost'
  become: False
  run_once: True

- name: Install encryption software
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:
    - '{{ dhparam__base_packages }}'
    - '{{ dhparam__packages }}'

- name: Create required directories
  file:
    path: '{{ dhparam__hook_path }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  notify: [ 'Regenerate DH parameters on first install' ]

- name: Preseed Diffie-Hellman parameters
  copy:
    src: '{{ dhparam__source_path + "/" }}'
    dest: '{{ dhparam__path + "/params/" + dhparam__set_prefix + item + "/" }}'
    owner: 'root'
    group: 'root'
    force: False
  with_sequence: 'start=0 count={{ dhparam__sets }}'
  notify: [ 'Execute DH parameter hooks' ]

- name: Create default symlinks for all sets
  file:
    src: '{{ "params/" + dhparam__set_prefix + item + "/" + dhparam__prefix + dhparam__default_length + dhparam__suffix }}'
    path: '{{ dhparam__path + "/" + dhparam__set_prefix + item }}'
    state: 'link'
  with_sequence: 'start=0 count={{ dhparam__sets }}'

- name: Install DHE generation script
  template:
    src: 'usr/local/lib/dhparam-generate-params.j2'
    dest: '{{ dhparam__generate_params }}'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Enable periodic DH parameters generation
  cron:
    name: 'Generate new Diffie-Hellman ephemeral parameters'
    job: 'test -x {{ dhparam__generate_params }} && {{ dhparam__generate_params }} schedule'
    cron_file: 'dhparam-generate-params'
    user: 'root'
    special_time: '{{ dhparam__generate_cron_period }}'
    state: '{{ "present" if dhparam__generate_cron|bool else "absent" }}'

- name: Make sure the Ansible local facts directory exists
  file:
    path: '/etc/ansible/facts.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Save dhparam local facts
  template:
    src: 'etc/ansible/facts.d/dhparam.fact.j2'
    dest: '/etc/ansible/facts.d/dhparam.fact'
    owner: 'root'
    group: 'root'
    mode: '0644'
  register: dhparam_register_facts

- name: Gather facts if they changed
  action: setup
  when: dhparam_register_facts.changed

