---

- name: Install requested packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_items: dokuwiki_packages

- name: Create DokuWiki group
  group:
    name: '{{ dokuwiki_group }}'
    system: True
    state: 'present'

- name: Create DokuWiki user
  user:
    name: '{{ dokuwiki_user }}'
    group: '{{ dokuwiki_group }}'
    home: '{{ dokuwiki_home }}'
    shell: '/bin/false'
    comment: 'DokuWiki'
    createhome: False
    system: True
    state: 'present'


# ---- Deployment ----

- name: Create DokuWiki source directory
  file:
    path: '{{ dokuwiki_src }}'
    state: 'directory'
    owner: '{{ dokuwiki_user }}'
    group: '{{ dokuwiki_group }}'
    mode: '0750'

- name: Clone DokuWiki source from deploy server
  git:
    repo: '{{ dokuwiki_git_repo }}'
    dest: '{{ dokuwiki_git_dest }}'
    bare: True
    update: True
  sudo_user: '{{ dokuwiki_user }}'
  register: dokuwiki_register_source
  no_log: True

- name: Create DokuWiki checkout directory
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: '{{ dokuwiki_user }}'
    group: '{{ dokuwiki_webserver_user }}'
    mode: '0750'
  with_items: [ '{{ dokuwiki_www }}', '{{ dokuwiki_git_checkout }}' ]

- name: Prepare DokuWiki worktree
  copy:
    content: 'gitdir: {{ dokuwiki_git_dest }}'
    dest: '{{ dokuwiki_git_checkout + "/.git" }}'
    owner: '{{ dokuwiki_user }}'
    group: '{{ dokuwiki_group }}'
    mode: '0644'

- name: Get commit hash of target checkout
  shell: GIT_WORK_TREE={{ dokuwiki_git_checkout }} git rev-parse {{ dokuwiki_git_version }}
         chdir={{ dokuwiki_git_dest }}
  sudo_user: '{{ dokuwiki_user }}'
  register: dokuwiki_register_target_branch
  changed_when: dokuwiki_register_target_branch.stdout != dokuwiki_register_source.before

- name: Checkout DokuWiki
  shell: GIT_WORK_TREE={{ dokuwiki_git_checkout }} git checkout -f {{ dokuwiki_git_version }}
         chdir={{ dokuwiki_git_dest }}
  sudo_user: '{{ dokuwiki_user }}'
  register: dokuwiki_register_checkout
  when: (dokuwiki_register_source.before is undefined or
         (dokuwiki_register_source.before is defined and
          dokuwiki_register_target_branch.stdout is defined and
          dokuwiki_register_source.before != dokuwiki_register_target_branch.stdout))


# ---- Configuration ----

- name: Remove specified plugins if requested
  file:
    path: '{{ dokuwiki_git_checkout + "/lib/plugins/" + item.dest }}'
    state: 'absent'
  with_items: dokuwiki_plugins
  when: ((item.dest|d() and item.dest) and (item.state|d() and item.state == 'absent'))

- name: Install specified plugins from git repositories
  git:
    repo: '{{ item.repo }}'
    dest: '{{ dokuwiki_git_checkout + "/lib/plugins/" + item.dest }}'
    version: '{{ item.version | default(omit) }}'
    update: True
  sudo_user: '{{ dokuwiki_user }}'
  with_items: dokuwiki_plugins
  when: ((item.repo|d() and item.repo) and (item.dest|d() and item.dest) and
         (item.state is undefined or (item.state|d() and item.state != 'absent')))
  no_log: True

- name: Remove specified templates if requested
  file:
    path: '{{ dokuwiki_git_checkout + "/lib/tpl/" + item.dest }}'
    state: 'absent'
  with_items: dokuwiki_templates
  when: ((item.dest|d() and item.dest) and (item.state|d() and item.state == 'absent'))

- name: Install specified templates from git repositories
  git:
    repo: '{{ item.repo }}'
    dest: '{{ dokuwiki_git_checkout + "/lib/tpl/" + item.dest }}'
    version: '{{ item.version | default(omit) }}'
    update: True
  sudo_user: '{{ dokuwiki_user }}'
  with_items: dokuwiki_templates
  when: ((item.repo|d() and item.repo) and (item.dest|d() and item.dest) and
         (item.state is undefined or (item.state|d() and item.state != 'absent')))
  no_log: True

- name: Install maintenance scripts
  template:
    src: '{{ item }}.j2'
    dest: '/{{ item }}'
    owner: 'root'
    group: 'root'
    mode: '0755'
  with_items:
    - 'etc/cron.daily/dokuwiki-cleanup'
    - 'etc/cron.weekly/dokuwiki-wikipedia-blacklist'

- include: dokuwiki_farm.yml
  when: dokuwiki_farm is defined and dokuwiki_farm

- name: Disable DokuWiki farm if not enabled
  file:
    path: '{{ dokuwiki_git_checkout + "/inc/preload.php" }}'
    state: 'absent'
  when: ((dokuwiki_farm is defined and not dokuwiki_farm) or
         (dokuwiki_farm_animals is defined and not dokuwiki_farm_animals))

- name: Configure DokuWiki farm preload script
  template:
    src: 'srv/www/dokuwiki/sites/public/inc/preload.php.j2'
    dest: '{{ dokuwiki_git_checkout + "/inc/preload.php" }}'
    owner: '{{ dokuwiki_user }}'
    group: '{{ dokuwiki_group }}'
    mode: '0644'
  when: (dokuwiki_farm is defined and dokuwiki_farm and
         dokuwiki_farm_animals is defined and dokuwiki_farm_animals)

- name: Download initial anti-spam blacklist
  command: /etc/cron.weekly/dokuwiki-wikipedia-blacklist
           creates={{ dokuwiki_git_checkout + "/conf/wordblock.local.conf" }}

