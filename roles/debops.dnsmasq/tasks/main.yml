---

- name: Install dnsmasq package
  apt:
    name: '{{ item }}'
    state: 'latest'
    install_recommends: False
  with_items: [ 'dnsmasq', 'resolvconf' ]

- name: Get list of local search domains
  shell: grep search /etc/resolv.conf | cut -d' ' -f2- | tr ' ' '\n'
  register: dnsmasq_register_search
  changed_when: False

- name: Get dnsmasq version
  shell: dnsmasq --version | head -n 1 | awk '{print $3}'
  register: dnsmasq_version
  changed_when: False

- name: Create main dnsmasq configuration
  template:
    src: 'etc/dnsmasq.d/00_main.conf.j2'
    dest: '/etc/dnsmasq.d/00_main.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Test and restart dnsmasq' ]

- name: Configure defaults for dnsmasq service
  template:
    src: 'etc/default/dnsmasq.j2'
    dest: '/etc/default/dnsmasq'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Test and restart dnsmasq' ]

- name: Configure custom nameservers
  template:
    src: 'etc/resolvconf/upstream.conf.j2'
    dest: '/etc/resolvconf/upstream.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Test and restart dnsmasq' ]
  when: dnsmasq_nameservers|d()

- name: Create interface dnsmasq configuration
  template:
    src: 'etc/dnsmasq.d/interface.conf.j2'
    dest: '/etc/dnsmasq.d/interface_{{ item.interface }}.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: dnsmasq_interfaces
  when: item.interface is defined and item.interface
  notify: [ 'Test and restart dnsmasq' ]

- name: Configure firewall - general options
  template:
    src: 'etc/ferm/filter-input.d/dnsmasq.conf.j2'
    dest: '/etc/ferm/filter-input.d/dnsmasq.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  notify: [ 'Restart ferm' ]

- name: Configure firewall on managed interfaces
  template:
    src: 'etc/ferm/filter-input.d/dnsmasq_interface.conf.j2'
    dest: '/etc/ferm/filter-input.d/dnsmasq_interface_{{ item.interface }}.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  with_items: dnsmasq_interfaces
  when: item.interface is defined and item.interface
  notify: [ 'Restart ferm' ]

- name: Allow access to TFTP in tcpwrappers
  template:
    src: 'etc/hosts.allow.d/50_dnsmasq_tftpd.j2'
    dest: '/etc/hosts.allow.d/50_dnsmasq_tftpd_{{ item.interface }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_items: dnsmasq_interfaces
  when: ((dnsmasq_tftp is defined and dnsmasq_tftp) and
         (item.interface is defined and item.interface))
  notify: [ 'Assemble hosts.allow.d' ]

- name: Make sure TFTP root directory exists
  file:
    path: '{{ dnsmasq_tftp_root }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: dnsmasq_tftp is defined and dnsmasq_tftp

- name: Remove custom nameservers
  file:
    path: '/etc/resolvconf/upstream.conf'
    state: 'absent'
  when: not dnsmasq_nameservers|d()
