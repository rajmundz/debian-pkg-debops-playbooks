---
# Default variables
# =================

# .. contents:: Sections
#    :local:
#
# ------------------------------------
#   Global options
# ------------------------------------

# .. envvar:: dnsmasq_public_dns
#
# Enable or disable access to the local DNS from upstream networks. You can publish
# your subdomain in the public DNS by delegating it in your zone configuration.
dnsmasq_public_dns: False


# .. envvar:: dnsmasq_dhcpv4
#
# Enable or disable DHCPv4 support.
dnsmasq_dhcpv4: True


# .. envvar:: dnsmasq_dhcpv6
#
# Enable or disable DHCPv6 support (router support is required).
dnsmasq_dhcpv6: True


# .. envvar:: dnsmasq_router
#
# Enable or disable local router support (no routing information is sent to
# hosts, DHCPv6 doesn't work).
# True means to announce the machine where dnsmasq is running as default
# gateway unless the gateway was explicitly given in :ref:`dnsmasq_interfaces`.
# False means to not announce any default route.
dnsmasq_router: True


# .. envvar:: dnsmasq_tftp
#
# Enable or disable TFTP server.
dnsmasq_tftp: True


# .. envvar:: dnsmasq_bind_interfaces
#
# Bind to and listen only on specified interfaces.
dnsmasq_bind_interfaces: True


# .. envvar:: dnsmasq_stop_dns_rebind
#
# Block private IP addresses coming from upstream nameservers.
dnsmasq_stop_dns_rebind: True


# .. envvar:: dnsmasq_bogus_priv
#
# Don't forward reverse DNS lookups for private IP addresses.
dnsmasq_bogus_priv: True


# ------------------------------------
#   Network interface options
# ------------------------------------

# .. envvar:: dnsmasq_upstream_interfaces
#
# List of network interfaces that are assumed to be upstream networks, if
# present on the host.
dnsmasq_upstream_interfaces: [ 'br0', 'br1', 'eth0', 'eth1' ]


# .. envvar:: dnsmasq_no_dhcp_interfaces
#
# List of network interfaces where dnsmasq should not provide DHCP or RA.
# See https://github.com/debops/ansible-dnsmasq/issues/13 for more information.
dnsmasq_no_dhcp_interfaces: []


# .. envvar:: dnsmasq_ipv4_gateway
#
# Name of the IPv4 gateway interface.
dnsmasq_ipv4_gateway: '{{ ansible_default_ipv4.interface | default("") }}'


# .. envvar:: dnsmasq_ipv6_gateway
#
# Name of the IPv6 gateway interface.
dnsmasq_ipv6_gateway: '{{ ansible_default_ipv6.interface | default("") }}'


# .. envvar:: dnsmasq_interfaces
#
# List of internal interfaces on which dnsmasq will configure its services.
dnsmasq_interfaces:

    # Name of the interface.
  - interface: 'br2'

    # DNS A record of the interface.
    name: '{{ ansible_hostname }}'

    # Optional DNS CNAME records of the interface.
    aliases: [ 'gw', 'router', 'gateway' ]

    # First IP address in the DHCP range (index).
    dhcp_range_start: '10'

    # Last IP address in the DHCP range (index).
    dhcp_range_end: '-10'

    # DHCP lease lifetime.
    dhcp_lease: '24h'

    # DHCPv6 options configured on this interface.
    ipv6_mode: 'ra-names,ra-stateless,slaac'

    # Address which dnsmasq will announce as default gateway via DHCPv4.
    # The default, as defined by dnsmasq_router is to announce the machine
    # running dnsmasq as default gateway.
    # gateway: '{{ ansible_default_ipv4.gateway }}'


# ------------------------------------
#   DNS options
# ------------------------------------

# .. envvar:: dnsmasq_domain
#
# DNS domain configured by dnsmasq for all local networks.
dnsmasq_domain: '{{ ansible_fqdn }}'


# .. envvar:: dnsmasq_domain_mx
#
# Set DNS MX record of the main domain to dnsmasq host. Set to False to
# disable.
dnsmasq_domain_mx: '{{ ansible_fqdn }}'


# .. envvar:: dnsmasq_etc_hosts
#
# Alternative ``/etc/hosts`` read by dnsmasq, set to False to use the default
# `/etc/hosts`` file.
dnsmasq_etc_hosts: '/etc/hosts.dnsmasq'


# .. envvar:: dnsmasq_search
#
# List of additional search domains. Set ref:`dnsmasq_search` to False
# to completely disable this functionality.
dnsmasq_search: [ '{{ dnsmasq_domain }}', '{{ ansible_domain }}' ]


# .. envvar:: dnsmasq_cname
#
# Hash of DNS CNAME records to configure for hosts found in local DNS.
# Entries should be specified without the domain suffix.
# Example::
#
#     dnsmasq_cname:
#       'host1': 'cname1'
#       'host2': [ 'list', 'of', 'aliases' ]
#
dnsmasq_cname: {}


# .. envvar:: dnsmasq_nameservers
#
# List of upstream DNS resolvers where dnsmasq should forward it's DNS queries
# which it can not answer by itself to. If set to ``False`` it will use the
# systems nameservers.
dnsmasq_nameservers: []


# ------------------------------------
#   TFTP options
# ------------------------------------

# .. envvar:: dnsmasq_tftp_root
#
# Path to TFTP root directory.
dnsmasq_tftp_root: '/srv/tftp'


# .. envvar:: dnsmasq_tftp_boot
#
# BOOTP command passed to clients (see dhcp-boot in dnsmasq(8)).
dnsmasq_tftp_boot: 'menu.ipxe'


# .. envvar:: dnsmasq_tftp_ipxe
#
# Enable iPXE support.
dnsmasq_tftp_ipxe: True


# ------------------------------------
#   Other options
# ------------------------------------

# .. envvar:: dnsmasq_options
#
# Additional options passed as a YAML text block
dnsmasq_options: ''
