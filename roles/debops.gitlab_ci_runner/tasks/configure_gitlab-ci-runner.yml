---

# ---- GitLab CI Runner code clone and checkout ----

- name: Clone GitLab CI Runner source code
  git:
    repo: '{{ gitlab_ci_runner_git_repo }}'
    dest: '{{ gitlab_ci_runner_git_dest }}'
    bare: True
    update: True
  sudo_user: '{{ gitlab_ci_runner_user }}'
  register: gitlab_ci_runner_register_source

- name: Check if GitLab CI Runner is checked out
  stat:
    path: '{{ gitlab_ci_runner_git_checkout }}'
  register: gitlab_ci_runner_register_directory

- name: Create GitLab CI Runner checkout directory
  file:
    path: '{{ gitlab_ci_runner_git_checkout }}'
    state: 'directory'
    owner: '{{ gitlab_ci_runner_user }}'
    group: '{{ gitlab_ci_runner_group }}'
    mode: '0755'

- name: Prepare GitLab CI Runner worktree
  copy:
    content: 'gitdir: {{ gitlab_ci_runner_git_dest }}'
    dest: '{{ gitlab_ci_runner_git_checkout + "/.git" }}'
    owner: '{{ gitlab_ci_runner_user }}'
    group: '{{ gitlab_ci_runner_group }}'
    mode: '0644'

- name: Get commit hash of target checkout
  shell: GIT_WORK_TREE={{ gitlab_ci_runner_git_checkout }} git rev-parse {{ gitlab_ci_runner_version_map[gitlab_ci_runner_version] }}
         chdir={{ gitlab_ci_runner_git_dest }}
  sudo_user: '{{ gitlab_ci_runner_user }}'
  register: gitlab_ci_runner_register_target_branch
  changed_when: gitlab_ci_runner_register_target_branch.stdout != gitlab_ci_runner_register_source.before

- include: gitlab_ci_runner_pre_upgrade.yml
  when: ((ansible_local is defined and ansible_local.gitlab_ci_runner is defined and
          ansible_local.gitlab_ci_runner.installed is defined and ansible_local.gitlab_ci_runner.installed) and
         ((gitlab_ci_runner_register_target_branch.stdout != gitlab_ci_runner_register_source.before) or
         (ansible_local.gitlab_ci_runner.version is defined and ansible_local.gitlab_ci_runner.version != gitlab_ci_runner_version)))

- name: Checkout GitLab CI Runner
  shell: GIT_WORK_TREE={{ gitlab_ci_runner_git_checkout }} git checkout -f {{ gitlab_ci_runner_version_map[gitlab_ci_runner_version] }}
         chdir={{ gitlab_ci_runner_git_dest }}
  sudo_user: '{{ gitlab_ci_runner_user }}'
  register: gitlab_ci_runner_register_checkout
  when: (gitlab_ci_runner_register_source.before is undefined or
         (gitlab_ci_runner_register_source.before is defined and
          gitlab_ci_runner_register_target_branch.stdout is defined and
          gitlab_ci_runner_register_source.before != gitlab_ci_runner_register_target_branch.stdout))

- name: Manage other GitLab CI Runner directories
  file:
    path: '{{ item }}'
    state: 'directory'
    owner: '{{ gitlab_ci_runner_user }}'
    group: '{{ gitlab_ci_runner_group }}'
    mode: '0755'
  with_items: [ '{{ gitlab_ci_runner_git_checkout + "/tmp" }}',
                '{{ gitlab_ci_runner_git_checkout + "/tmp/pids" }}',
                '/var/log/gitlab-ci-runner' ]


# ---- GitLab CI Runner configuration files and scripts ----

- name: Setup GitLab CI Runner default configuration
  template:
    src: 'etc/default/gitlab-ci-runner.j2'
    dest: '/etc/default/gitlab-ci-runner'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart gitlab-ci-runner' ]

- name: Install GitLab CI Runner service script
  shell: install -T -o root -g root -m 755
       {{ gitlab_ci_runner_git_checkout }}/lib/support/init.d/gitlab_ci_runner /etc/init.d/gitlab-ci-runner
  when: gitlab_ci_runner_register_checkout is defined and gitlab_ci_runner_register_checkout.changed

- name: Patch GitLab CI Runner init script to enable defaults support
  lineinfile:
    dest: '/etc/init.d/gitlab-ci-runner'
    state: 'present'
    regexp: '^test -f /etc/default/gitlab-ci-runner'
    line: 'test -f /etc/default/gitlab-ci-runner && . /etc/default/gitlab-ci-runner'
    insertafter: '^INIT_LOG="/var/log/gitlab_ci_runner.log"'

- name: Enable GitLab CI Runner service
  service:
    name: 'gitlab-ci-runner'
    enabled: True
  when: gitlab_ci_runner_register_checkout is defined and gitlab_ci_runner_register_checkout.changed

- name: Setup GitLab CI Runner logrotate configuration
  template:
    src: 'etc/logrotate.d/gitlab-ci-runner.j2'
    dest: '/etc/logrotate.d/gitlab-ci-runner'
    owner: 'root'
    group: 'root'
    mode: '0644'


- include: configure_services.yml


# ---- GitLab CI Runner main etup ----

- name: Update Ruby gems
  shell: bundle install --deployment chdir={{ gitlab_ci_runner_git_checkout }}
  sudo_user: '{{ gitlab_ci_runner_user }}'
  notify: [ 'Restart gitlab-ci-runner' ]
  when: gitlab_ci_runner_register_checkout is defined and gitlab_ci_runner_register_checkout.changed

- name: Register GitLab CI Runner with GitLab CI instance
  shell: CI_SERVER_URL={{ gitlab_ci_runner_url }} REGISTRATION_TOKEN={{ gitlab_ci_runner_token }} bundle exec ./bin/setup
         chdir={{ gitlab_ci_runner_git_checkout }}
  sudo_user: '{{ gitlab_ci_runner_user }}'
  register: gitlab_ci_runner_register_instance
  when: ((gitlab_ci_runner_token is defined and gitlab_ci_runner_token) and
         (gitlab_ci_runner_url is defined and gitlab_ci_runner_url) and
         (ansible_local is undefined or (ansible_local is defined and
          (ansible_local.gitlab_ci_runner is undefined or (ansible_local.gitlab_ci_runner is defined and
           (ansible_local.gitlab_ci_runner.registered is undefined or (ansible_local.gitlab_ci_runner.registered is defined and
            not ansible_local.gitlab_ci_runner.registered)))))))

  # Runner won't start normally, no idea why. But restart works too.
- name: Start GitLab CI Runner
  service:
    name: 'gitlab-ci-runner'
    state: 'restarted'
  when: (ansible_local is undefined or (ansible_local is defined and
         (ansible_local.gitlab_ci_runner is undefined or (ansible_local.gitlab_ci_runner is defined and
          (ansible_local.gitlab_ci_runner.installed is undefined or (ansible_local.gitlab_ci_runner.installed is defined and
           not ansible_local.gitlab_ci_runner.installed))))))

- name: Install requested packages
  apt:
    name: '{{ item }}'
    state: 'latest'
    install_recommends: False
  with_items: gitlab_ci_runner_packages
  when: gitlab_ci_runner_packages is defined and gitlab_ci_runner_packages

