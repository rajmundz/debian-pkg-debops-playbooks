---

# ---- GitLab CI Runner configuration ----

# URL of GitLab CI instance where this runner will try to register
gitlab_ci_runner_url: 'https://ci.{{ ansible_domain }}'

# Runner registration token (required). Currently there is no way to get this
# token automatically. You should install GitLab CI instance and after login go
# to Runners page, where you can find the token. Copy it and save in your
# inventory.
gitlab_ci_runner_token: ""

# What version of GitLab CI Runner to install / manage
gitlab_ci_runner_version: '5.0'

# Number of runner threads to start by default
gitlab_ci_runner_threads: '{{ ansible_processor_cores }}'

# List of Debian packages to install after runner has been configured
gitlab_ci_runner_packages: []


# ---- Integration with external services ----

# List of services to integrate with GitLab CI Runner instance:
#   - 'sudo'      - allow gitlab-ci-runner user to sudo to root
#   - 'mysql'     - configure access to local or remote MySQL database
gitlab_ci_runner_services: []

# Specify FQDN hostname of the MySQL server. If it's not localhost, Ansible
# will configure it using 'delegate_to' functionality.
gitlab_ci_runner_services_mysql_host: 'localhost'

# MySQL user to configure
gitlab_ci_runner_services_mysql_user: '{{ gitlab_ci_runner_user }}'

# MySQL password to configure
gitlab_ci_runner_services_mysql_password: '{{ gitlab_ci_runner_services_mysql_user }}'

# MySQL user privileges, by default grant access to all ci_test_* databases
gitlab_ci_runner_services_mysql_priv: 'ci_test_%.*:ALL'


# ---- System configuration ----

# System user, group and home directory
gitlab_ci_runner_user: 'gitlab-ci-runner'
gitlab_ci_runner_group: '{{ gitlab_ci_runner_user }}'
gitlab_ci_runner_home: '/var/local/{{ gitlab_ci_runner_user }}'

