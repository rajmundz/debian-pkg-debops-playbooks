---

- name: Configure kernel parameters
  sysctl:
    sysctl_file: '{{ swapfile__sysctl_file }}'
    name: '{{ item.key }}'
    value: '{{ item.value }}'
    state: 'present'
    reload: True
  with_dict: '{{ swapfile__sysctl_map }}'
  when: swapfile__sysctl_map|d()

- name: Disable swap files when requested
  shell: test -f {{ item.path | d(item) }} && swapoff {{ item.path | d(item) }} || true
  changed_when: False
  with_items: '{{ swapfile__files }}'
  when: ((swapfile__files|d() and item.state|d() and item.state == 'absent') and
         (ansible_local|d() and (ansible_local.cap12s|d() and (not ansible_local.cap12s.enabled | bool or
          (ansible_local.cap12s.enabled | bool and 'cap_sys_admin' in ansible_local.cap12s.list)))))

- name: Remove swap files
  file:
    path: '{{ item.path | d(item) }}'
    state: 'absent'
  with_items: '{{ swapfile__files }}'
  when: swapfile__files|d() and item.state|d() and item.state == 'absent'

- name: Create swap files
  command: |
    {% if swapfile__use_dd|bool %}
    dd if=/dev/zero of={{ item.path | d(item) }} bs=1M count={{ item.size | d(swapfile__size) }}
    {% else %}
    fallocate -l {{ ((item.size | d(swapfile__size))|int * 1024 * 1024) }} {{ item.path | d(item) }}
    {% endif %}
  args:
    creates: '{{ item.path | d(item) }}'
  register: swapfile__register_allocation
  with_items: '{{ swapfile__files }}'
  when: (swapfile__files|d() and
         (item.state is undefined or item.state != 'absent'))

- name: Enforce permissions
  file:
    path: '{{ item.path | d(item) }}'
    state: 'file'
    owner: 'root'
    group: 'root'
    mode: '0600'
  with_items: '{{ swapfile__files }}'
  when: (swapfile__files|d() and
         (item.state is undefined or item.state != 'absent'))

- name: Initialize swap files
  command: mkswap {{ item.item.path | d(item.item) }}
  register: swapfile__register_init
  with_items: '{{ swapfile__register_allocation.results }}'
  when: ((swapfile__files|d() and swapfile__register_allocation|d() and
          item.changed | bool) and
         (item.state is undefined or item.state != 'absent'))

- name: Enable swap files
  command: swapon -p {{ item.item.priority | d(swapfile__priority) }} {{ item.item.path | d(item.item) }}
  with_items: '{{ swapfile__register_allocation.results }}'
  when: ((swapfile__files|d() and swapfile__register_allocation|d() and item.changed | bool) and
         (item.state is undefined or item.state != 'absent') and
          (ansible_local|d() and (ansible_local.cap12s|d() and (not ansible_local.cap12s.enabled | bool or
           (ansible_local.cap12s.enabled | bool and 'cap_sys_admin' in ansible_local.cap12s.list)))))

- name: Manage swap files in /etc/fstab
  mount:
    src: '{{ item.path | d(item) }}'
    name:   'none'
    fstype: 'swap'
    opts:   'sw,nofail,pri={{ item.priority | d(swapfile__priority) }}'
    dump:   '0'
    passno: '0'
    state:  '{{ item.state | d("present") }}'
  with_items: '{{ swapfile__files }}'
  when: swapfile__files|d()

