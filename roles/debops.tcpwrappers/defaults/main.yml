---

# Should Ansible manage tcpwrappers configuration?
tcpwrappers_enabled: True

# Optional list of CIDR hosts which will be allowed to connect to sshd service.
# Entries are saved in the local facts on remote hosts.
# Remember to specify IP address from the remote host point of view.
# Format: "IP address/netmask", for example: '192.168.1.1/32'
# Note: If you are using debop.ferm, too (or the DebOps playbook),
#       mind setting `ferm_ansible_controllers`. An easier way would
#       be to use the `debops.sshd` role to configure ssh service.
tcpwrappers_ansible_controllers: []

# Deny access from all hosts/networks by default?
tcpwrappers_deny_all: True

# Lists of /etc/hosts.allow entries. Example entry below
tcpwrappers_allow: []
tcpwrappers_group_allow: []
tcpwrappers_host_allow: []
tcpwrappers_dependent_allow: []

  #- daemon: 'ALL'            # daemon to configure (sshd, mysqld, etc.)
  #  client: []               # list of host or network addresses.
                              # If empty, entry will be removed
  #  default: ''              # alternative option to set if item.client is not
                              # defined or is false. To accept connections from
                              # anywhere, specify 'ALL'
  #  accept_any: True/False   # Allow connections from any host (or item.default)
                              # if no clients are specified
  #  weight: '10'             # filename prefix, helps with sorting, optional
  #  filename: ''             # custom filename, optional
  #  comment: ''              # comment, optional

  #- custom: |                  # custom, free-form text block (filename required)
  #    # Custom entry
  #    # Text block
  #  filename: 'custom_entry'

# Access from localhost
tcpwrappers_local_allow:
  - daemon: 'ALL'
    client: [ '127.0.0.0/8', '::1/128' ]
    comment: 'Access from localhost'
    filename: 'allow_localhost'
    weight: '06'

# Name of diverted /etc/hosts.allow
tcpwrappers_divert_hosts_allow: '/etc/hosts.allow.d/05_debian_hosts.allow'

