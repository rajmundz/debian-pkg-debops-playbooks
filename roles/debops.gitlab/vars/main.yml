---

# ---- Application sources ----

# gitlab-shell source and install path
gitlab_shell_git_repo: 'https://gitlab.com/gitlab-org/gitlab-shell.git'
gitlab_shell_git_dest: '{{ gitlab_src_path + "/" + gitlab_shell_git_repo.split("://")[1] }}'
gitlab_shell_git_checkout: '{{ gitlab_app_root_path + "/gitlab-shell" }}'

# GitLab CE source and install path
gitlab_ce_git_repo: 'https://gitlab.com/gitlab-org/gitlab-ce.git'
gitlab_ce_git_dest: '{{ gitlab_src_path + "/" + gitlab_ce_git_repo.split("://")[1] }}'
gitlab_ce_git_checkout: '{{ gitlab_app_root_path + "/gitlab" }}'

# gitlab-git-http-server source and install path
gitlab_git_http_server_repo: 'https://gitlab.com/gitlab-org/gitlab-git-http-server.git'
gitlab_git_http_server_dest: '{{ gitlab_src_path + "/" + gitlab_git_http_server_repo.split("://")[1] }}'
gitlab_git_http_server_checkout: '{{ gitlab_app_root_path + "/gitlab-git-http-server" }}'

# gitlab-workhorse source and install path
gitlab_workhorse_repo: 'https://gitlab.com/gitlab-org/gitlab-workhorse.git'
gitlab_workhorse_dest: '{{ gitlab_src_path + "/" + gitlab_workhorse_repo.split("://")[1] }}'
gitlab_workhorse_checkout: '{{ gitlab_app_root_path + "/gitlab-workhorse" }}'

# ---- GitLab version map ----

# This dict is used to map 'gitlab_version' to correct GitLab branch and
# gitlab-shell tag. Versions included below are supported by this role.
gitlab_version_map:

  '6.7':
    shell: 'v1.9.1'
    ce:    '6-7-stable'

  '6.8':
    shell: 'v1.9.3'
    ce:    '6-8-stable'

  '6.9':
    shell: 'v1.9.4'
    ce:    '6-9-stable'

  '7.0':
    shell: 'v1.9.6'
    ce:    '7-0-stable'

  '7.1':
    shell: 'v1.9.6'
    ce:    '7-1-stable'

  '7.6':
    shell: 'v2.4.0'
    ce:    '7-6-stable'

  '7.7':
    shell: 'v2.4.1'
    ce:    '7-7-stable'

  '7.8':
    shell: 'v2.5.4'
    ce:    '7-8-stable'

  '7.9':
    shell: 'v2.6.0'
    ce:    '7-9-stable'

  '7.10':
    shell: 'v2.6.2'
    ce:    '7-10-stable'

  '7.11':
    shell: 'v2.6.3'
    ce:    '7-11-stable'

  '7.12':
    shell: 'v2.6.3'
    ce:    '7-12-stable'

  '7.13':
    shell: 'v2.6.5'
    ce:    '7-13-stable'

  '7.14':
    shell: 'v2.6.5'
    ce:    '7-14-stable'

  '8.0':
    shell: 'v2.6.5'
    ce:    '8-0-stable'
    git_http_server: '0.2.10'

  '8.1':
    shell: 'v2.6.5'
    ce:    '8-1-stable'
    git_http_server: '0.3.0'

  '8.5':
    shell: 'v2.6.10'
    ce:    '8-5-stable'
    gitlab_workhorse: '0.6.4'

  '8.6':
    shell: 'v2.6.11'
    ce:    '8-6-stable'
    gitlab_workhorse: 'v0.7.1'

# ---- GitLab CE installation ----

# List of packages required by GitLab
gitlab_packages: [ 'build-essential', 'zlib1g-dev', 'libyaml-dev', 'libssl-dev',
                   'libgdbm-dev', 'libreadline-dev', 'libncurses5-dev', 'libffi-dev',
                   'libxml2-dev', 'libxslt1-dev', 'libcurl4-openssl-dev', 'libkrb5-dev',
                   'libicu-dev', 'python-docutils', 'cmake', 'pkg-config', 'nodejs' ]

# List of packages required to specified database
gitlab_database_packages:
  mariadb:    [ 'libmysqlclient-dev', 'ruby-mysql' ]
  postgresql: [ 'libpq-dev', 'ruby-pg' ]

# Arguments to use with 'bundle install' for different database servers
gitlab_ce_bundle_install_without:
  'mariadb':    'development test aws postgres'
  'postgresql': 'development test aws mysql'

# ---- Web server ----

gitlab_nginx_upstreams:

# nginx upstream configuration for gitlab service
  - name: 'gitlab'
    enabled: '{{ not gitlab_enable_gitlab_workhorse | bool }}'
    type: 'rails'
    server: 'unix:{{ gitlab_ce_git_checkout }}/tmp/sockets/gitlab.socket'

# nginx upstream configuration for gitlab-git-http-server used in GitLab 8+
  - name: 'gitlab-git-http-server'
    enabled: '{{ gitlab_enable_git_http_server }}'
    server: 'unix:{{ gitlab_ce_git_checkout }}/tmp/sockets/gitlab-git-http-server.socket'

# nginx upstream configuration for gitlab-workhorse used in GitLab 8.2+
  - name: 'gitlab-workhorse'
    enabled: '{{ gitlab_enable_gitlab_workhorse }}'
    server: 'unix:{{ gitlab_ce_git_checkout }}/tmp/sockets/gitlab-workhorse.socket'

# nginx server configuration for GitLab
gitlab_nginx_server:
  by_role: 'debops.gitlab'
  enabled: True
  type: 'rails'
  name: '{{ gitlab_domain }}'
  root: '{{ gitlab_ce_git_checkout }}/public'

  deny_hidden: False

  access_policy: '{{ gitlab_nginx_access_policy }}'
  auth_basic_realm: '{{ gitlab_nginx_auth_realm }}'

  error_pages:
    '502': '/502.html'

  # Phusion Passenger options
  passenger_user: '{{ gitlab_user }}'
  passenger_group: '{{ gitlab_group }}'
  passenger_options: '{{ gitlab_passenger_options }}'

  options: |
    client_max_body_size {{ gitlab_nginx_client_max_body_size }};

  location_list:
    - pattern: '/'
      enabled: '{{ not gitlab_enable_gitlab_workhorse | bool }}'
      options: |
        try_files $uri $uri/index.html $uri.html @gitlab;

    - pattern: '/uploads/'
      enabled: '{{ not gitlab_enable_gitlab_workhorse | bool }}'
      options: |
        gzip off;
        proxy_read_timeout {{ gitlab_nginx_proxy_timeout }};
        proxy_connect_timeout {{ gitlab_nginx_proxy_timeout }};
        proxy_redirect     off;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Frame-Options   SAMEORIGIN;
        proxy_pass         http://gitlab;

    - pattern: '@gitlab'
      enabled: '{{ not gitlab_enable_gitlab_workhorse | bool }}'
      options: |
        gzip off;
        proxy_read_timeout {{ gitlab_nginx_proxy_timeout }};
        proxy_connect_timeout {{ gitlab_nginx_proxy_timeout }};
        proxy_redirect     off;
        proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_pass         http://gitlab;

    - pattern: '~ [-\/\w\.]+\.git\/'
      enabled: '{{ gitlab_enable_git_http_server }}'
      options: |
        gzip off;
  
        ## https://github.com/gitlabhq/gitlabhq/issues/694
        ## Some requests take more than 30 seconds.
        proxy_read_timeout      300;
        proxy_connect_timeout   300;
        proxy_redirect          off;
    
        # Do not buffer Git HTTP responses
        proxy_buffering off;
  
        # The following settings only work with NGINX 1.7.11 or newer
        #
        # # Pass chunked request bodies to gitlab-git-http-server as-is
        # proxy_request_buffering off;
        # proxy_http_version 1.1;
  
        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;
  
        proxy_pass http://gitlab-git-http-server;

    - pattern: '/'
      enabled: '{{ gitlab_enable_gitlab_workhorse }}'
      options: |
        client_max_body_size 0;
        gzip off;

        ## https://github.com/gitlabhq/gitlabhq/issues/694
        ## Some requests take more than 30 seconds.
        proxy_read_timeout      300;
        proxy_connect_timeout   300;
        proxy_redirect          off;

        proxy_http_version 1.1;

        proxy_set_header    Host                $http_host;
        proxy_set_header    X-Real-IP           $remote_addr;
        proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-Proto   $scheme;

        proxy_pass http://gitlab-workhorse;

    - pattern: '~ ^/(assets)/'
      enabled: '{{ not gitlab_enable_gitlab_workhorse | bool }}'
      options: |
        root {{ gitlab_ce_git_checkout }}/public;
        gzip_static on;
        expires max;
        add_header Cache-Control public;

