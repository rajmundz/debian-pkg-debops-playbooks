---

# NOTE: Redis requires boolean variables to be exactly yes or no, do not confuse
# them with yaml booleans. They should be quoted to be output as strings.

# Check the URLs below for a detailed explanation of each command:
# http://download.redis.io/redis-stable/redis.conf
# http://download.redis.io/redis-stable/sentinel.conf


# --- General ---

# Which inventory group does redis-server belong to?
redis_hosts_group: 'debops_redis'

# What is the master redis server's host and port?
# You can use a host name or IPv4 address.
redis_hosts_master: '{{ groups[redis_hosts_group][0] }} {{ redis_port }}'

# You might want to use 0.0.0.0 and then allow access from your app servers or
# anything that needs to talk to redis by configuring redis_server_allow below.
redis_bind: ['localhost']

redis_port: 6379

# Allow connections from a list of hosts, you may use masks such as:
# 192.168.0.0/16 but it must be in a list, ex. ['192.168.0.0/16'].
redis_server_allow: []

redis_timeout: 0
redis_tcp_keepalive: 0
redis_tcp_backlog: 511
redis_loglevel: 'notice'


# ---- Sentinel ----

# When set to False both redis-server and redis-sentinel will be on the same host.
redis_sentinel_standalone: True

# Which inventory group does redis-sentinel belong to?
redis_sentinel_hosts_group: 'debops_redis_sentinel'

# These values accept the same type of values as the general redis server.
redis_sentinel_bind: ['localhost']
redis_sentinel_port: 26379
redis_sentinel_allow: []

# A list of redis servers to monitor. Commented values are optional.
redis_sentinel_group_list:
# The name of the monitor group, you can use whatever you want.
  - name: 'main'
# The master server's host address.
    #host: '{{ groups[redis_hosts_group][0] }}'
# The master server's port.
    #port: '{{ redis_port }}'
# How many sentinels need to agree that the master is down before failing over?
    #quorom: 2
# Consult the redis documentation for the rest.
    #parallel_syncs: 1
    #down_after_milliseconds: 30000
    #failover_timeout: 180000
    #notification_script: ''
    #client_reconfig_script: ''


# ---- Snapshotting ----

# You can disable saving entirely by providing an empty list.
redis_save:
  - '900 1'
  - '300 10'
  - '60 10000'

redis_stop_writes_on_bgsave_error: 'yes'


# ---- Replication ----

redis_slave_read_only: 'yes'
redis_repl_ping_slave_period: 10
redis_repl_timeout: 60
redis_repl_backlog_size: 1mb
redis_repl_backlog_ttl: 3600
redis_slave_priority: 100
redis_min_slaves_to_write: 0
redis_min_slaves_max_lag: 10


# ---- Security ----

redis_requirepass: False
#
# Example using the secret role to automatically set a password.
# This password will be applied to the master, slaves and sentinels.
#redis_requirepass: "{{ lookup('password', secret + '/credentials/' + groups[redis_hosts_group][0] + '/redis/redis/password length=20') }}"


# ---- Limits ----

redis_maxclients: 10000

# Set a percent multiplier to cap the amount of RAM redis will use. For example
# if you wanted to limit it to 80% of the total RAM you would input 0.8.
redis_maxmemory_multiplier: 1.0

redis_maxmemory_policy: 'volatile-lru'


# ---- Append only mode ----

redis_appendonly: 'no'


# ---- Slow log ----

redis_slowlog_log_slower_than: 10000
redis_slowlog_max_len: 128


# ---- Latency monitor ----

redis_latency_monitor_threshold: 0


# ---- Event notification ----

redis_notify_keyspace_events: False
