---

- name: Remove APT preferences
  file:
    dest: '/etc/apt/preferences.d/{{ item.filename | d((item.role | d(item.by_role | d("pin"))) + "_"  + item.package.split(" ")[0] + (item.suffix | d("")) + ".pref") | replace("*","all") }}'
    state: 'absent'
  with_flattened:
    ## Deprecated: (((
    - '{{ apt_preferences_list|d([]) }}'
    - '{{ apt_preferences_group_list|d([]) }}'
    - '{{ apt_preferences_host_list|d([]) }}'
    - '{{ apt_preferences_dependent_list|d([]) }}'
    ## )))
    - '{{ apt_preferences__list }}'
    - '{{ apt_preferences__group_list }}'
    - '{{ apt_preferences__host_list }}'
    - '{{ apt_preferences__dependent_list }}'
  when: (
          (
            (item.delete|d() | bool) and
            (item.package is string and item.package) and
            (item.version is undefined or (item.version is defined and not item.version))
          ) or
          (
            item.pin is undefined and
            (
              item.backports is undefined or
              (
                item.backports is iterable and item.backports and
                ansible_distribution_release not in item.backports
              )
            ) and ansible_distribution_release not in apt_preferences__next_release.keys()
          )
        )

- name: Create APT preferences
  template:
    src: 'etc/apt/preferences.d/pin.pref.j2'
    dest: '/etc/apt/preferences.d/{{ item.filename | d((item.role | d(item.by_role | d("pin"))) + "_" + item.package.split(" ")[0] + (item.suffix | d("")) + ".pref") | replace("*","all") }}'
    owner: 'root'
    group: 'root'
    mode: '0644'
  with_flattened:
    ## Deprecated: (((
    - '{{ apt_preferences_list|d([]) }}'
    - '{{ apt_preferences_group_list|d([]) }}'
    - '{{ apt_preferences_host_list|d([]) }}'
    - '{{ apt_preferences_dependent_list|d([]) }}'
    ## )))
    - '{{ apt_preferences__list }}'
    - '{{ apt_preferences__group_list }}'
    - '{{ apt_preferences__host_list }}'
    - '{{ apt_preferences__dependent_list }}'
  when: (
          (
            (not (item.delete|d() | bool)) and
            item.package is string and item.package
          ) and
          (
            item.version|d() or
            (
              item.pin is undefined and
              (
                item.backports is undefined or
                (
                  item.backports is iterable and item.backports and
                  ansible_distribution_release in item.backports
                )
              ) and
             ansible_distribution_release in apt_preferences__next_release.keys()
            ) or item.pin|d()
          )
        )

